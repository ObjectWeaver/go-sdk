syntax = "proto3";

package jsonSchema;

option go_package = "./grpc";

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

// Definition message
message Definition {
  string type = 1; // Corresponds to Go's DataType field (as a string)
  string instruction = 2; // Corresponds to Go's Instruction field
  map<string, Definition> properties = 3; // Corresponds to Go's Properties field
  repeated string required = 4; // Corresponds to Go's Required field
  Definition items = 5; // Corresponds to Go's Items field
  string model = 6; // Corresponds to Go's ModelType field (as a string)
  repeated string processingOrder = 7; // Corresponds to Go's ProcessingOrder field
  string systemPrompt = 8; // Corresponds to Go's SystemPrompt field
  RequestFormat req = 9; // Corresponds to Go's Req field
  Focus narrowFocus = 10; // Corresponds to Go's NarrowFocus field
  bool improvementProcess = 11; // Corresponds to Go's ImprovementProcess field
  repeated string selectFields = 12; // Corresponds to Go's SelectFields field
  Choices choices = 13; // Corresponds to Go's Choices field
  bool voters = 14; // Corresponds to Go's Voters field
  HashMap hashMap = 15; // Corresponds to Go's HashMap field
}

// Choices message
message Choices {
  int32 number = 1; // Corresponds to Go's Number field
  repeated string options = 2; // Corresponds to Go's Options field
}

// HashMap message
message HashMap {
  string keyInstruction = 1; // Corresponds to Go's KeyInstruction field
  Definition fieldDefinition = 2; // Corresponds to Go's FieldDefinition field
}

// Focus message
message Focus {
  string prompt = 1; // Corresponds to Go's Prompt field
  repeated string fields = 2; // Corresponds to Go's Fields field
  bool keepOriginal = 3; // Corresponds to Go's KeepOriginal field
}

// RequestFormat message
message RequestFormat {
  string url = 1;
  string method = 2;
  map<string, string> headers = 3;
  google.protobuf.Struct body = 4; // This corresponds to Go's Body field as map[string]interface{}
  string authorization = 5;
  repeated string requireFields = 6;
}

// RequestBody message for the GenerateObject RPC
message RequestBody {
  string prompt = 1; // Corresponds to Go's Prompt field
  Definition definition = 2; // Corresponds to Go's Definition field
}

// Response message for the GenerateObject RPC
message Response {
  bytes data = 1; // Corresponds to Go's Response.Data field (byte array in gRPC)
  double usdCost = 2; // Corresponds to Go's Response.UsdCost field
}

// The JSONSchemaService defines a service for generating JSON objects based on a schema definition.
service JSONSchemaService {
  rpc GenerateObject(RequestBody) returns (Response);
}